-- KPI 1 . 
-- On-Time Performance by SSR Category

WITH FlightSSRCounter AS (
    -- Step 1: Count the number of Special Service Requests for each unique flight.
    SELECT
        company_id,
        flight_number,
        scheduled_departure_date_local,
        COUNT(*) AS ssr_count
    FROM
        dbo.PNR_Remarks
    GROUP BY
        company_id, flight_number, scheduled_departure_date_local
)
-- This is the main query that uses the CTE we just defined.
SELECT
    -- Step 2: Create human-readable categories based on the ssr_count.
    CASE
        WHEN s.ssr_count IS NULL OR s.ssr_count = 0 THEN 'No SSRs'
        WHEN s.ssr_count BETWEEN 1 AND 2 THEN '1-2 SSRs'
        WHEN s.ssr_count BETWEEN 3 AND 5 THEN '3-5 SSRs'
        ELSE '6+ SSRs'
    END AS ssr_category,

    -- Step 3: Calculate the on-time performance for each category.
    -- An on-time flight is not delayed more than 15 minutes.
    AVG(CASE WHEN f.actual_departure_datetime_local > DATEADD(minute, 15, f.scheduled_departure_datetime_local) THEN 0.0 ELSE 1.0 END) * 100 AS on_time_performance_pct
FROM
    dbo.Flights f
-- Join the Flights table with our pre-calculated SSR counts from the CTE.
LEFT JOIN
    FlightSSRCounter s ON f.company_id = s.company_id
                       AND f.flight_number = s.flight_number
                       AND f.scheduled_departure_date_local = s.scheduled_departure_date_local
-- Group the final results by the categories we created.
GROUP BY
    CASE
        WHEN s.ssr_count IS NULL OR s.ssr_count = 0 THEN 'No SSRs'
        WHEN s.ssr_count BETWEEN 1 AND 2 THEN '1-2 SSRs'

        WHEN s.ssr_count BETWEEN 3 AND 5 THEN '3-5 SSRs'
        ELSE '6+ SSRs'
    END
-- Order the results for a clean presentation.
ORDER BY
    ssr_category;


-- SUBPART OF KPI 1. 
-- IN THIS WE ARE FINDING WHICH SSR IS CAUSING THE PROBLEM 

-- Select the specific SSR type and calculate its unique impact on on-time performance
SELECT
    r.special_service_request,
    COUNT(f.flight_number) AS total_flights_with_ssr,
    AVG(CASE WHEN f.actual_departure_datetime_local > DATEADD(minute, 15, f.scheduled_departure_datetime_local) THEN 0.0 ELSE 1.0 END) * 100 AS on_time_performance_pct
   
FROM
    dbo.Flights AS f
JOIN
    dbo.PNR_Remarks AS r 
    ON f.company_id = r.company_id
                      AND f.flight_number = r.flight_number
                       AND f.scheduled_departure_date_local = r.scheduled_departure_date_local
GROUP BY
    r.special_service_request
ORDER BY
    on_time_performance_pct ASC;
